{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","categ","user","usersFromServer","person","SORT_BY","App","useState","selectedUser","setSelectedUser","query","setQuery","sortField","setSortField","visibleProducts","preparedProducts","normalizedQuery","toLowerCase","filter","includes","sort","product1","product2","localeCompare","getPreparedProducts","className","href","onClick","cn","type","placeholder","value","onChange","event","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ad839a8.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","/* eslint-disable jsx-a11y/accessible-emoji */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(categ => categ.id === product.categoryId);\n  const user = usersFromServer.find(person => person.id === category.ownerId);\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst SORT_BY = {\n  ID: 'id',\n  PRODUCT: 'product',\n  CATEGORY: 'category',\n  USER: 'user',\n};\n\nconst getPreparedProducts = (selectedUser, query, sortField) => {\n  let preparedProducts = [...products];\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase();\n\n    preparedProducts = preparedProducts\n      .filter(product => product.name.toLowerCase().includes(normalizedQuery));\n  }\n\n  if (selectedUser) {\n    preparedProducts = preparedProducts\n      .filter(product => product.category.ownerId === selectedUser);\n  }\n\n  if (sortField) {\n    preparedProducts.sort((product1, product2) => {\n      switch (sortField) {\n        case SORT_BY.PRODUCT:\n          return product1.name.localeCompare(product2.name);\n\n        case SORT_BY.CATEGORY:\n          return product1.category.title.localeCompare(product2.category.title);\n\n        case SORT_BY.USER:\n          return product1.user.name.localeCompare(product2.user.name);\n\n        case SORT_BY.ID:\n          return product1.id - product2.id;\n\n        default:\n          return preparedProducts;\n      }\n    });\n  }\n\n  return preparedProducts;\n};\n\nexport const App = () => {\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [query, setQuery] = useState('');\n  const [sortField, setSortField] = useState('');\n\n  const visibleProducts = getPreparedProducts(selectedUser, query, sortField);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                onClick={() => setSelectedUser(null)}\n                className={cn({\n                  'is-active': !selectedUser,\n                })}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  key={user.id}\n                  onClick={() => {\n                    setSelectedUser(selectedUser === user.id ? null : user.id);\n                  }}\n                  className={cn({\n                    'is-active': user === selectedUser,\n                  })}\n                >\n                  {user.name}\n                </a>\n              ))}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={(event) => {\n                    setQuery(event.target.value);\n                  }}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className=\"button is-success mr-6 is-outlined\"\n              >\n                All\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1 is-info\"\n                href=\"#/\"\n              >\n                Category 1\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1\"\n                href=\"#/\"\n              >\n                Category 2\n              </a>\n\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1 is-info\"\n                href=\"#/\"\n              >\n                Category 3\n              </a>\n              <a\n                data-cy=\"Category\"\n                className=\"button mr-2 my-1\"\n                href=\"#/\"\n              >\n                Category 4\n              </a>\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => {\n                  setQuery('');\n                  setSelectedUser(null);\n                  setSortField('');\n                }}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {!visibleProducts ? (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          ) : (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      ID\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          setSortField(SORT_BY.ID);\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          setSortField(SORT_BY.PRODUCT);\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-down\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          setSortField(SORT_BY.CATEGORY);\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          setSortField(SORT_BY.USER);\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {visibleProducts.map(product => (\n                  <tr data-cy=\"Product\" key={product.id}>\n                    <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                      {product.id}\n                    </td>\n\n                    <td data-cy=\"ProductName\">{product.name}</td>\n                    <td data-cy=\"ProductCategory\">\n                      {product.category.icon}\n                      -\n                      {product.category.title}\n                    </td>\n\n                    <td\n                      data-cy=\"ProductUser\"\n                      className={cn('has-text-link',\n                        { 'has-text-danger': product.user.sex === 'f' })}\n                    >\n                      {product.user.name}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}